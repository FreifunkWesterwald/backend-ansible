#!/bin/sh
set -e

if ! which ecdsasign >/dev/null 2>&1; then
  echo "'ecdsasign' is not installed."
  exit 1;
fi

BASEDIR=$(pwd)
UNSTABLE=0
MANIFEST=unset

usage() {
  echo "Usage $0 [ -u | --unstable ] [ -f= | --file= ] [ -h | --help ]
       Signs the firmware manifest, that was generated by './prepare.sh'.
       If '-u' or '--unstable' is given, the pre-release in './prepare/unstable' is signed. Otherwise './prepare/stable' will be signed.
       If '-f' or '--file' is given, the manifest file denoted by the given path is signed ('-u' is ignored in this case).
       If '-h' or '--help' is given, this message is printed."

  exit 2
}


PARSED_ARGUMENTS=$(getopt -a -n alphabet -o huf: --long help,unstable,file: -- "$@")
VALID_ARGUMENTS=$?
if [ "$VALID_ARGUMENTS" != "0" ]; then
  usage
fi

eval set -- "$PARSED_ARGUMENTS"
while :
do
  case "$1" in
    -u | --unstable)  UNSTABLE=1  ; shift   ;;
    -f | --file) MANIFEST=$2      ; shift 2 ;;
    -h | --help) usage ;;
    # -- means the end of the arguments; drop this, and break out of the while loop
    --) shift; break ;;
    # If invalid options were passed, then getopt should have reported an error,
    # which we checked as VALID_ARGUMENTS when getopt was called...
    *) echo "Unexpected option: $1 - this should not happen."
       usage ;;
  esac
done

if [ "$MANIFEST" = "unset" ]; then
  if [ $UNSTABLE -eq 1 ]; then
    MANIFEST=prepare/unstable/images/sysupgrade/unstable.manifest
  else
    MANIFEST=prepare/stable/images/sysupgrade/stable.manifest
  fi
elif [ -z "$MANIFEST" ]; then
  echo 'option -f | --file requires an argument'
  exit 1
fi

if [ ! -f $MANIFEST ]; then
  echo "Manifest file '$MANIFEST' not found."
  exit 1
fi

TO_SIGN=$(mktemp manifestXXXXXX.sig)
# Copy everything up until (excluding) "---"
sed -n '/^---/!p;//q' $MANIFEST > $TO_SIGN

printf "Please enter your ecdsa key: "
stty -echo
SIGNATURE=$(ecdsasign $TO_SIGN)
stty echo
echo
rm $TO_SIGN
echo Generated signature: $SIGNATURE
echo $SIGNATURE >> $MANIFEST
